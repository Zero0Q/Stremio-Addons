name: EpisoNext CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  deploy-gh-pages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/
      - name: Copy installation guide
        run: |
          mkdir -p dist/docs
          cp INSTALLATION.md dist/docs/
          cp README.md dist/docs/
      - name: Create landing page
        run: |
          cat > dist/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>EpisoNext - Smart Episode Tracking for Stremio</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <style>
              body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
              .hero { background-color: #2c3e50; color: white; padding: 4rem 0; }
              .features { padding: 3rem 0; }
              .feature-icon { font-size: 2.5rem; margin-bottom: 1rem; color: #3498db; }
            </style>
          </head>
          <body>
            <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
              <div class="container">
                <a class="navbar-brand" href="#">EpisoNext</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                  <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                  <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="#features">Features</a></li>
                    <li class="nav-item"><a class="nav-link" href="#installation">Installation</a></li>
                    <li class="nav-item"><a class="nav-link" href="docs/README.md">Documentation</a></li>
                  </ul>
                </div>
              </div>
            </nav>
            
            <section class="hero">
              <div class="container text-center">
                <h1 class="display-4">EpisoNext</h1>
                <p class="lead">Smart next episode tracking and real-time monitoring for Stremio</p>
                <a href="stremio://addon/com.stremio.episonext/manifest.json" class="btn btn-primary btn-lg mt-3">Install in Stremio</a>
              </div>
            </section>
            
            <section class="features" id="features">
              <div class="container">
                <h2 class="text-center mb-5">Key Features</h2>
                <div class="row">
                  <div class="col-md-4 text-center mb-4">
                    <div class="feature-icon">ðŸ“º</div>
                    <h3>Smart Episode Tracking</h3>
                    <p>Intelligently tracks your viewing progress and suggests the next episode to watch</p>
                  </div>
                  <div class="col-md-4 text-center mb-4">
                    <div class="feature-icon">ðŸ””</div>
                    <h3>Real-time Notifications</h3>
                    <p>Get notified when new episodes of your favorite shows are available</p>
                  </div>
                  <div class="col-md-4 text-center mb-4">
                    <div class="feature-icon">ðŸŽ¬</div>
                    <h3>Enhanced Metadata</h3>
                    <p>Enriches your viewing experience with additional show information and ratings</p>
                  </div>
                </div>
              </div>
            </section>
            
            <section class="bg-light py-5" id="installation">
              <div class="container">
                <h2 class="text-center mb-4">Installation Options</h2>
                <div class="row justify-content-center">
                  <div class="col-md-8">
                    <div class="card mb-3">
                      <div class="card-body">
                        <h5 class="card-title">One-Click Installation</h5>
                        <p class="card-text">The easiest way to install EpisoNext:</p>
                        <a href="stremio://addon/com.stremio.episonext/manifest.json" class="btn btn-primary">Install in Stremio</a>
                      </div>
                    </div>
                    <div class="card mb-3">
                      <div class="card-body">
                        <h5 class="card-title">Manual Installation</h5>
                        <p class="card-text">For advanced users who want more control:</p>
                        <a href="docs/INSTALLATION.md" class="btn btn-outline-primary">View Installation Guide</a>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </section>
            
            <footer class="bg-dark text-white py-4">
              <div class="container text-center">
                <p>EpisoNext &copy; 2023 | <a href="https://github.com/yourusername/episonext" class="text-white">GitHub</a></p>
              </div>
            </footer>
            
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
          </body>
          </html>
          EOL
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages

  build-docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/episonext:latest
            ghcr.io/${{ github.repository_owner }}/episonext:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    if: github.event_name == 'release'
    needs: [deploy-gh-pages, build-docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/
      - name: Create ZIP archive
        run: |
          cd dist
          zip -r ../episonext.zip .
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./episonext.zip
          asset_name: episonext.zip
          asset_content_type: application/zip 